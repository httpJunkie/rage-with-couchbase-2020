{
  "Implement GraphQL resolvers": {
    "scope": "javascript",
    "prefix": "s04",
    "body": [
      "const airlinesUkQuery = `",
      "  SELECT airline.* ",
      "  FROM \\`travel-sample\\` AS airline ",
      "  WHERE airline.type = 'airline'",
      "  AND airline.country = 'United Kingdom'",
      "`",
      "const airlinesByRegionQuery = `",
      "  SELECT airline.* ",
      "  FROM \\`travel-sample\\` AS airline ",
      "  WHERE airline.type = 'airline'",
      "    AND airline.country = \\$REGION",
      "`",
      "",
      "const root = {",
      "  airlinesUK: async () => {",
      "    const result = await cluster.query(airlinesUkQuery)",
      "    return result.rows",
      "  },",
      "  airlinesByRegion: async ({region}) => {",
      "    const options = { parameters: { REGION: region } }",
      "    const result = await cluster.query(airlinesByRegionQuery, options)",
      "    return result.rows",
      "  },",
      "  airlineByKey: async ({id}) => {",
      "    const result = await collection.get(`airline_\\${id}`)",
      "    return result.value",
      "  },",
      "  updateAirline: async ({id, input}) => {",
      "    const result = await collection.get(`airline_\\${id}`)",
      "",
      "    const newDocument = {",
      "      id: result.value.id,",
      "      callsign: input.callsign ? input.callsign : result.value.callsign,",
      "      country: input.country ? input.country : result.value.country,",
      "      iata: input.iata ? input.iata : result.value.iata,",
      "      icao: input.icao ? input.icao : result.value.icao,",
      "      name: input.name ? input.name : result.value.name,",
      "      type: result.value.type",
      "    }",
      "",
      "    await collection.upsert(`airline_\\${id}`, newDocument)",
      "    return newDocument",
      "  }",
      "}"
    ],
    "description": "Add GraphQL resolvers and implementation"
  }
}